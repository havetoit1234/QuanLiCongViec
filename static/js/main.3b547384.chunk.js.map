{"version":3,"sources":["Component/TaskForm.js","Component/Search.js","Component/Control.js","Component/TaskItem.js","Component/Result.js","App.js","reportWebVitals.js","index.js"],"names":["TaskForm","props","onCloseForm","onChange","event","target","name","value","setState","onClean","status","onSubmit","preventDefault","state","onCloseFrom1","id","this","task","nextProps","console","log","className","onClick","type","Component","Search","onSearch","filterName1","placeholder","Control","TaskItem","onUpdateStatus","onDelete","onUpdate","index","Result","onFilter","filterName","filterStatus","tasks","elmTask","map","App","onToggelForm","isDisplayForm","taskEditing","onShowForm","data","onrandomId","push","findIndex","localStorage","setItem","JSON","stringify","result","forEach","splice","parseInt","filter","toLowerCase","key","filter1","Math","floor","random","toString","s4","getItem","parse","indexOf","elmDisplayForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b547384.chunk.js","sourcesContent":["import React , {Component} from 'react';\r\n\r\nclass TaskForm extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id : '',\r\n            name : '',\r\n            status : false\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        if(this.props.task){\r\n            this.setState({\r\n                id : this.props.task.id,\r\n                name : this.props.task.name,\r\n                status : this.props.task.status\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps && nextProps.task !== null){\r\n            console.log('qsc');\r\n            this.setState({\r\n                id : nextProps.task.id,\r\n                name : nextProps.task.name,\r\n                status : nextProps.task.status\r\n            })\r\n        }else if( nextProps  && nextProps.task ){\r\n            console.log('123');\r\n        }\r\n    }\r\n\r\n    onCloseForm = () => {\r\n           this.props.onCloseForm();\r\n        }\r\n    onChange = (event)=> {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        if(name === 'status'){\r\n            value = target.value ==='true' ? true : false ;\r\n        }\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n    onClean = ()=>{\r\n        this.setState({\r\n            name : '',\r\n            status : false\r\n        })\r\n    }\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.onClean();\r\n        this.onCloseForm();\r\n\r\n    }\r\n    onCloseFrom1 = () =>{\r\n        this.onCloseForm();\r\n    }\r\n    \r\n    render(){\r\n        var {id} = this.state;\r\n        return(\r\n            <div className=\"panel panel-warning\">\r\n                    <div className=\"panel-heading\">\r\n                        <h3 className=\"panel-title\">\r\n                        {id !== ''? \"Cập Nhật Công Việc\" : \"Thêm Công Việc\"}\r\n                        <span\r\n                            className=\"fa fa-times-circle text-right\"\r\n                            onClick={this.onCloseFrom1}\r\n                        ></span>\r\n                        </h3>\r\n\r\n                    </div>\r\n                    <div className=\"panel-body\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label>Tên :</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\"\r\n                                    name=\"name\"\r\n                                    value={this.state.name}\r\n                                    onChange={this.onChange}\r\n                                    \r\n                                   />\r\n                            </div>\r\n                            <label>Trạng Thái :</label>\r\n                            <select \r\n                                className=\"form-control\"\r\n                                name=\"status\"\r\n                                value={this.state.status}\r\n                                onChange={this.onChange}\r\n                                \r\n                                >\r\n                                    <option value={true}>Kích Hoạt</option>\r\n                                    <option value={false}>Ẩn</option>\r\n                            </select>\r\n                            <br/>\r\n                            <div className=\"text-center\">\r\n                                <button type=\"submit\" className=\"btn btn-warning\">\r\n                                <span className=\"fa fa-plus mr-5\"></span>Thêm</button>&nbsp;\r\n                                <button \r\n                                type=\"button\" \r\n                                className=\"btn btn-danger\"\r\n                                onClick ={this.onClean}>\r\n                                <span className=\"fas fa-window-close mr-5\"></span>Hủy Bỏ</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>           \r\n        );      \r\n    }\r\n}\r\n \r\n \r\n\r\nexport default TaskForm;\r\n","import React , {Component} from 'react';\r\n\r\nclass Search extends Component{\r\n\r\n    constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                filterName1 : ''\r\n            }\r\n        }\r\n\r\n    onChange = (event) =>{\r\n            var target = event.target;\r\n            var name = target.name;\r\n            var value = target.value;\r\n            this.setState({\r\n                [name] : value\r\n            });\r\n        }\r\n    onSearch = () =>{\r\n        this.props.onSearch(this.state.filterName1);\r\n    }\r\n\r\n    render(){\r\n\r\n        \r\n        return(             \r\n             <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"input-group\">\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        placeholder=\"Nhập từ khóa...\" \r\n                        name=\"filterName1\"\r\n                        value={this.state.filterName1}\r\n                        onChange={this.onChange}/>\r\n\r\n                        <span \r\n                            className=\"input-group-btn\">\r\n                                <button \r\n                                    className=\"btn btn-primary\" \r\n                                    type=\"button\"\r\n                                    onClick = {this.onSearch}\r\n                                    >\r\n                                        <span   \r\n                                            className=\"fa fa-search mr-5\"\r\n                                        ></span>Tìm\r\n                                </button>\r\n                        </span>\r\n                    </div>\r\n                </div>   \r\n            );      \r\n        }\r\n    }\r\n \r\nexport default Search;\r\n","import React , {Component} from 'react';\r\nimport Search from './Search';\r\n\r\nclass Control extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"row mt-15\"> \r\n                {/*search*/}              \r\n                <Search \r\n                    onSearch={this.props.onSearch}\r\n                    />\r\n            </div>   \r\n            );      \r\n        }\r\n    }\r\n \r\n \r\nexport default Control;\r\n","import React , {Component} from 'react';\r\n\r\nclass TaskItem extends Component{\r\n\r\n    onUpdateStatus = () =>{\r\n        this.props.onUpdateStatus(this.props.task.id);\r\n    }\r\n    onDelete = () =>{\r\n        this.props.onDelete(this.props.task.id);\r\n    }\r\n    onUpdate = () =>{\r\n        this.props.onUpdate(this.props.task.id);\r\n    }\r\n    render(){\r\n        var { task ,index} = this.props ;\r\n        return(\r\n            <tr>\r\n                <td>{index+1}</td>\r\n                <td>{task.name}</td>\r\n                <td className=\"text-center\">\r\n                    <span \r\n                        className={task.status === true ? 'label label-danger' : 'label label-success'}\r\n                        onClick={this.onUpdateStatus}\r\n                        >\r\n                                {task.status === true ? 'Kích Hoạt' : 'Ẩn'}\r\n                    </span>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <button\r\n                         type=\"button\" \r\n                         className=\"btn btn-warning\"\r\n                         onClick={this.onUpdate}\r\n                         >\r\n                        <span className=\"fas fa-pen mr-5\"></span>Sửa\r\n                    </button>\r\n                    &nbsp;\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-danger\"\r\n                        onClick={this.onDelete}>\r\n                        <span className=\"fa fa-trash mr-5\"></span>Xóa\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );      \r\n    }\r\n}\r\nexport default TaskItem;","import React , {Component} from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\nclass Result extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            filterName : '',\r\n            filterStatus : -1 // -1 : all , 1 active , 0 : deactive\r\n        }\r\n    }\r\n    onChange = (event) =>{\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.props.onFilter(\r\n            name === 'filterName' ? value : this.state.filterName,\r\n            name === 'filterStatus' ? value : this.state.filterStatus\r\n            )\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    render(){\r\n        var {tasks} = this.props; // var tasks = this.props.tasks\r\n        var {filterName,filterStatus} = this.state;\r\n        var elmTask = tasks.map((task,index) => {\r\n            return <TaskItem \r\n                key={task.id} \r\n                index={index} \r\n                task={task}\r\n                onUpdateStatus={this.props.onUpdateStatus}\r\n                onDelete={this.props.onDelete}\r\n                onUpdate={this.props.onUpdate}\r\n                />\r\n        });\r\n        return(\r\n            <div className=\"row mt-15\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 \">\r\n                        <table className=\"table table-bordered table-hover \">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"text-center\">STT</th>\r\n                                    <th className=\"text-center\">Tên</th>\r\n                                    <th className=\"text-center\">Trạng Thái</th>\r\n                                    <th className=\"text-center\">Hành Động</th>\r\n                                </tr>\r\n                            </thead>\r\n                             <tbody>\r\n                                <tr>\r\n                                    <td></td>\r\n                                    <td>\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            className=\"form-control\" \r\n                                            name=\"filterName\"\r\n                                            value={filterName}\r\n                                            onChange = {this.onChange}\r\n                                            placeholder=\"Nhập từ khóa...\"\r\n                                            />\r\n                                    </td>\r\n                                    <td>\r\n                                        <select \r\n                                            className=\"form-control\"\r\n                                            name=\"filterStatus\"\r\n                                            value={filterStatus}\r\n                                            onChange={this.onChange}\r\n                                        >\r\n                                            <option value={-1}>Tất Cả</option>\r\n                                            <option value={0}>Ẩn</option>\r\n                                            <option value={1}>Kích Hoạt</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td></td>\r\n                                </tr>\r\n                                {elmTask}\r\n                            </tbody>\r\n                        </table>\r\n                </div>\r\n            </div>\r\n        );      \r\n    }\r\n}\r\nexport default Result;","import React , {Component} from 'react';\nimport TaskForm from './Component/TaskForm'\nimport Control from './Component/Control'\nimport Result from './Component/Result'\nimport './App.css';\nclass App extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            tasks : [] , // id : duy nhat , name ,status\n            isDisplayForm : false ,\n            taskEditing : null,\n            filter : {\n                name : '',\n                status : -1\n            } ,\n            filter1 : ''\n        }\n    }\n    \n    \n    s4(){\n        return Math.floor((1+Math.random())* 0x10000).toString(16); // ham random\n    }\n    onrandomId(){\n        return this.s4()+'-'+this.s4()+'-'+this.s4()+'-'+this.s4(); // hamramdom\n    }\n    componentWillMount(){ // ham mac dinh f5 lai la ...... dua du lieu len \n        if(localStorage && localStorage.getItem('tasks')){\n            var tasks = JSON.parse(localStorage.getItem('tasks')) // chuyen kieeu tring thanh object\n            this.setState({\n                tasks : tasks\n            });\n        }\n    }\n    onToggelForm = () => {\n        if(this.state.isDisplayForm === true && this.state.taskEditing !== null){\n            this.setState({\n                isDisplayForm   : true , \n                taskEditing  : null \n            });   \n        }\n        \n        this.setState({\n            isDisplayForm : !this.state.isDisplayForm,\n            taskEditing : null\n        });\n    }\n    onCloseForm = () =>{\n        this.setState({\n            isDisplayForm : false\n        })\n    }\n    onShowForm = () =>{\n        this.setState({\n            isDisplayForm : true\n        })\n    }\n    onSubmit = (data) =>{\n        var {tasks} = this.state;// var tasks = this.state.tasks\n        if(data.id ===\"\"){\n            data.id = this.onrandomId(); // thêm dữ liệu id vào trong biến data\n            tasks.push(data);\n        }else{\n            // Editing\n            var index = this.findIndex(data.id);\n            tasks[index] = data; \n        }\n        \n        this.setState({\n            tasks : tasks,\n            taskEditing : null\n        });\n        localStorage.setItem('tasks',JSON.stringify(tasks));\n\n    }\n    onUpdateStatus = (id) =>{\n        var index = this.findIndex(id);\n        var {tasks} = this.state;\n        if(index !== -1){\n            tasks[index].status = !tasks[index].status;\n        }\n        this.setState({\n            tasks : tasks,\n            \n        })\n        localStorage.setItem('tasks',JSON.stringify(tasks));\n    }\n    findIndex = (id)=>{\n        var {tasks} = this.state;\n        var result = -1;\n        tasks.forEach((task ,index )=>{\n            if(task.id === id){\n                result = index;\n            }\n        })\n        return result;\n    }\n    onDelete = (id) =>{\n        var index = this.findIndex(id);\n        var {tasks} = this.state;\n        if(index !== -1){\n            tasks.splice(index,1);\n        }\n        this.setState({\n            tasks : tasks\n        })\n        localStorage.setItem('tasks',JSON.stringify(tasks));\n        this.onCloseForm();\n\n    }\n    onUpdate = (id) =>{\n        var index = this.findIndex(id);\n        var {tasks} = this.state;\n        var taskEditing = tasks[index];\n        this.setState({\n            taskEditing : taskEditing\n        }); \n        this.onShowForm();\n    }\n    onFilter = (filterName , filterStatus) =>{\n        filterStatus = parseInt(filterStatus,10);\n        this.setState({\n            filter : {\n                name : filterName.toLowerCase(),\n                status : filterStatus\n            }            \n        });\n      \n    }\n\n    onSearch = (key) =>{\n        this.setState({\n            filter1 : key\n        })\n    }\n\n    render(){\n        var {tasks , isDisplayForm, taskEditing, filter , filter1} = this.state; // var tasks = this.state.tasks\n        if(filter){\n            if(filter.name){\n                tasks = tasks.filter((task) =>{\n                    return task.name.toLowerCase().indexOf(filter.name) !== -1 ; // ham indexOf de kiem tra xem chuoi co trong do hay khong\n                })\n            }\n            tasks = tasks.filter((task) => {\n                if(filter.status === -1){\n                    return task;\n                }else{\n                    return task.status === (filter.status === 1 ? true : false)\n                }\n            })\n        }\n        if(filter1){\n            tasks = tasks.filter((task) =>{\n                return task.name.toLowerCase().indexOf(filter1) !== -1\n            })\n        }\n        var elmDisplayForm = isDisplayForm === true ? \n            <TaskForm  \n            onSubmit ={this.onSubmit}\n            onCloseForm={this.onCloseForm}\n            task = {taskEditing}\n            /> : '';\n        return(\n            <div className=\"container\">\n        <div className=\"text-center \">\n            <h1>Quản Lý Công Việc</h1>\n            <br/>\n        </div>\n        <div className=\"row\"> \n            <div className={isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : ''}>\n                {elmDisplayForm}\n            </div>\n            <div className={isDisplayForm === true ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n                <button \n                type=\"button\" \n                className=\"btn btn-primary \"\n                onClick={this.onToggelForm}>\n                    <span className=\"fa fa-plus \"></span>Thêm Công Việc\n                </button>\n                <Control \n                    onSearch={this.onSearch}\n                    />\n                <Result \n                    tasks={tasks}\n                    onUpdateStatus={this.onUpdateStatus} \n                    onDelete = {this.onDelete}\n                    onUpdate={this.onUpdate}\n                    onFilter = {this.onFilter}\n                    />\n            </div>\n        </div>\n    </div>\n    \n);      \n    }\n}\n \n \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}